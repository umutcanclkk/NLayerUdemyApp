// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NLayerRepository;

#nullable disable

namespace NLayerRepository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231226061229_new5")]
    partial class new5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NLayer.Core.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kalemler"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kitaplar "
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Defterler"
                        });
                });

            modelBuilder.Entity("NLayer.Core.Models.Customers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("E_Mail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Customers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            E_Mail = "john.doe@example.com",
                            Name = "John",
                            PhoneNumber = " 123456789",
                            SurName = "Doe",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            E_Mail = "jane.smith@example.com",
                            Name = "Jane",
                            PhoneNumber = "987654321",
                            SurName = "Smith",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            E_Mail = "alice.johnson@example.com",
                            Name = "Alice",
                            PhoneNumber = " 555555555",
                            SurName = "Johnson",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            E_Mail = "bob.williams@example.com",
                            Name = "Bob",
                            PhoneNumber = "777777777",
                            SurName = "Williams",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            E_Mail = "eve.taylor@example.com",
                            Name = "Eve",
                            PhoneNumber = " 999999999",
                            SurName = "Taylor",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            E_Mail = "michael.johnson@example.com",
                            Name = "Michael",
                            PhoneNumber = "111111111",
                            SurName = "Johnson",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            E_Mail = "emily.davis@example.com",
                            Name = "Emily",
                            PhoneNumber = " 222222222",
                            SurName = "Davis",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            E_Mail = "daniel.brown@example.com",
                            Name = "Daniel",
                            PhoneNumber = "333333333",
                            SurName = "Brown",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            E_Mail = "olivia.miller@example.com",
                            Name = "Olivia",
                            PhoneNumber = " 444444444",
                            SurName = "Miller",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            E_Mail = "william.clark@example.com",
                            Name = "William",
                            PhoneNumber = "555555555",
                            SurName = "Clark",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("NLayer.Core.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Payments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 100.50m,
                            Date = new DateTime(2023, 12, 26, 9, 12, 29, 363, DateTimeKind.Local).AddTicks(6282),
                            PaymentMethod = "Kredi Kartı",
                            TransactionId = "ABC123"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 50.75m,
                            Date = new DateTime(2023, 12, 24, 9, 12, 29, 363, DateTimeKind.Local).AddTicks(6295),
                            PaymentMethod = "Nakit",
                            TransactionId = "XYZ789"
                        },
                        new
                        {
                            Id = 3,
                            Amount = 200.00m,
                            Date = new DateTime(2023, 12, 21, 9, 12, 29, 363, DateTimeKind.Local).AddTicks(6301),
                            PaymentMethod = "Havale",
                            TransactionId = "DEF456"
                        },
                        new
                        {
                            Id = 4,
                            Amount = 75.25m,
                            Date = new DateTime(2023, 12, 25, 9, 12, 29, 363, DateTimeKind.Local).AddTicks(6302),
                            PaymentMethod = "Kripto Para",
                            TransactionId = "GHI789"
                        },
                        new
                        {
                            Id = 5,
                            Amount = 120.90m,
                            Date = new DateTime(2023, 12, 23, 9, 12, 29, 363, DateTimeKind.Local).AddTicks(6303),
                            PaymentMethod = "Çek",
                            TransactionId = "JKL012"
                        },
                        new
                        {
                            Id = 6,
                            Amount = 85.60m,
                            Date = new DateTime(2023, 12, 22, 9, 12, 29, 363, DateTimeKind.Local).AddTicks(6305),
                            PaymentMethod = "Banka Kartı",
                            TransactionId = "MNO345"
                        },
                        new
                        {
                            Id = 7,
                            Amount = 150.25m,
                            Date = new DateTime(2023, 12, 20, 9, 12, 29, 363, DateTimeKind.Local).AddTicks(6306),
                            PaymentMethod = "EFT",
                            TransactionId = "PQR678"
                        },
                        new
                        {
                            Id = 8,
                            Amount = 60.30m,
                            Date = new DateTime(2023, 12, 19, 9, 12, 29, 363, DateTimeKind.Local).AddTicks(6307),
                            PaymentMethod = "Sanal Cüzdan",
                            TransactionId = "STU901"
                        },
                        new
                        {
                            Id = 9,
                            Amount = 40.15m,
                            Date = new DateTime(2023, 12, 18, 9, 12, 29, 363, DateTimeKind.Local).AddTicks(6308),
                            PaymentMethod = "Mobil Ödeme",
                            TransactionId = "VWX234"
                        },
                        new
                        {
                            Id = 10,
                            Amount = 110.75m,
                            Date = new DateTime(2023, 12, 17, 9, 12, 29, 363, DateTimeKind.Local).AddTicks(6309),
                            PaymentMethod = "Fatura Ödeme",
                            TransactionId = "YZA567"
                        });
                });

            modelBuilder.Entity("NLayer.Core.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 12, 26, 9, 12, 29, 364, DateTimeKind.Local).AddTicks(806),
                            Name = "Kalem 1",
                            Price = 100m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 12, 26, 9, 12, 29, 364, DateTimeKind.Local).AddTicks(811),
                            Name = "Kalem 2",
                            Price = 200m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 12, 26, 9, 12, 29, 364, DateTimeKind.Local).AddTicks(812),
                            Name = "Kalem 3",
                            Price = 600m,
                            Stock = 60
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2023, 12, 26, 9, 12, 29, 364, DateTimeKind.Local).AddTicks(813),
                            Name = "Kiataplar 1",
                            Price = 680m,
                            Stock = 26
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2023, 12, 26, 9, 12, 29, 364, DateTimeKind.Local).AddTicks(814),
                            Name = "Kitaplar 2",
                            Price = 650m,
                            Stock = 320
                        });
                });

            modelBuilder.Entity("NLayer.Core.ProductFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductFeatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Kırmızı",
                            Height = 100,
                            ProductId = 1,
                            Width = 200
                        },
                        new
                        {
                            Id = 2,
                            Color = "Mavi",
                            Height = 300,
                            ProductId = 2,
                            Width = 500
                        });
                });

            modelBuilder.Entity("NLayer.Core.Product", b =>
                {
                    b.HasOne("NLayer.Core.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("NLayer.Core.ProductFeature", b =>
                {
                    b.HasOne("NLayer.Core.Product", "Product")
                        .WithOne("ProductFeature")
                        .HasForeignKey("NLayer.Core.ProductFeature", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("NLayer.Core.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("NLayer.Core.Product", b =>
                {
                    b.Navigation("ProductFeature");
                });
#pragma warning restore 612, 618
        }
    }
}
